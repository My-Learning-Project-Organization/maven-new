pipeline {
    agent any

    tools
    {
        maven "maven-3.8.5"
    }
    
    options{
        timestamps()
        buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5'))
    }
    
    triggers{
        //pollSCM
        //pollSCM('* * * * *')
        //Build Periodically
        //cron('* * * * *')
        GitHub WebHook
        //githubPush()
    }

    stages {
        stage('CheckoutCode')
        {
            steps{
                git branch: 'development', credentialsId: '268a20bf-7452-44a0-82fd-0ac81f58c01c', url: 'https://github.com/My-Learning-Project-Organization/my-web-app.git'
            }
        }
        
        stage('Build')
        {
            steps{
                sh "mvn clean package"
            }
        }
        
        stage('UploadPackageIntoNexus')
        {
            steps{
                sh "mvn clean deploy"
            }
        }
    } // stages closing tags
    
    post{
      always{
      emailext body: '''Hi,
        Build Finished........!!!
        
        Regards,
        Prashant Rajput''', subject: 'Build Over..!!', to: 'prashantrajput@gmail.com'
      
      }
      
      failure{
      emailext body: '''Hi,
        Build Failed........!!!
        
        Regards,
        Prashant Rajput''', subject: 'Build Over..!!', to: 'prashantrajput@gmail.com'
      
      }
      
      success{
      emailext body: '''Hi,
        Build Succesfully Finished........!!!
        
        Regards,
        Prashant Rajput''', subject: 'Build Over..!!', to: 'prashantrajput@gmail.com'
      
      }
    
    }  //post closing tag
    
} //pipeline closing tag
